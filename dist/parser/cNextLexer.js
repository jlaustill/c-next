"use strict";
// Generated from cNext.g4 by ANTLR 4.9.0-SNAPSHOT
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.cNextLexer = void 0;
const ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
const Lexer_1 = require("antlr4ts/Lexer");
const LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
const VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
const Utils = __importStar(require("antlr4ts/misc/Utils"));
class cNextLexer extends Lexer_1.Lexer {
    // @Override
    // @NotNull
    get vocabulary() {
        return cNextLexer.VOCABULARY;
    }
    // tslint:enable:no-trailing-whitespace
    constructor(input) {
        super(input);
        this._interp = new LexerATNSimulator_1.LexerATNSimulator(cNextLexer._ATN, this);
    }
    // @Override
    get grammarFileName() { return "cNext.g4"; }
    // @Override
    get ruleNames() { return cNextLexer.ruleNames; }
    // @Override
    get serializedATN() { return cNextLexer._serializedATN; }
    // @Override
    get channelNames() { return cNextLexer.channelNames; }
    // @Override
    get modeNames() { return cNextLexer.modeNames; }
    static get _ATN() {
        if (!cNextLexer.__ATN) {
            cNextLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(cNextLexer._serializedATN));
        }
        return cNextLexer.__ATN;
    }
}
exports.cNextLexer = cNextLexer;
cNextLexer.T__0 = 1;
cNextLexer.IMPORT = 2;
cNextLexer.INCLUDE = 3;
cNextLexer.PUBLIC = 4;
cNextLexer.STATIC = 5;
cNextLexer.CLASS = 6;
cNextLexer.TYPE_INT8 = 7;
cNextLexer.TYPE_INT16 = 8;
cNextLexer.TYPE_INT32 = 9;
cNextLexer.TYPE_INT64 = 10;
cNextLexer.TYPE_UINT8 = 11;
cNextLexer.TYPE_UINT16 = 12;
cNextLexer.TYPE_UINT32 = 13;
cNextLexer.TYPE_UINT64 = 14;
cNextLexer.TYPE_FLOAT32 = 15;
cNextLexer.TYPE_FLOAT64 = 16;
cNextLexer.TYPE_FLOAT96 = 17;
cNextLexer.TYPE_STRING = 18;
cNextLexer.TYPE_BOOLEAN = 19;
cNextLexer.ASSIGN = 20;
cNextLexer.SEMI = 21;
cNextLexer.LBRACE = 22;
cNextLexer.RBRACE = 23;
cNextLexer.LPAREN = 24;
cNextLexer.RPAREN = 25;
cNextLexer.COMMA = 26;
cNextLexer.RETURN = 27;
cNextLexer.PLUS = 28;
cNextLexer.MINUS = 29;
cNextLexer.MULT = 30;
cNextLexer.DIV = 31;
cNextLexer.DOT = 32;
cNextLexer.ID = 33;
cNextLexer.NUMBER = 34;
cNextLexer.STRING = 35;
cNextLexer.FILENAME = 36;
cNextLexer.WS = 37;
// tslint:disable:no-trailing-whitespace
cNextLexer.channelNames = [
    "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
];
// tslint:disable:no-trailing-whitespace
cNextLexer.modeNames = [
    "DEFAULT_MODE",
];
cNextLexer.ruleNames = [
    "T__0", "IMPORT", "INCLUDE", "PUBLIC", "STATIC", "CLASS", "TYPE_INT8",
    "TYPE_INT16", "TYPE_INT32", "TYPE_INT64", "TYPE_UINT8", "TYPE_UINT16",
    "TYPE_UINT32", "TYPE_UINT64", "TYPE_FLOAT32", "TYPE_FLOAT64", "TYPE_FLOAT96",
    "TYPE_STRING", "TYPE_BOOLEAN", "ASSIGN", "SEMI", "LBRACE", "RBRACE", "LPAREN",
    "RPAREN", "COMMA", "RETURN", "PLUS", "MINUS", "MULT", "DIV", "DOT", "ID",
    "NUMBER", "STRING", "FILENAME", "WS",
];
cNextLexer._LITERAL_NAMES = [
    undefined, "'void'", "'import'", "'#include'", "'public'", "'static'",
    "'class'", "'int8'", "'int16'", "'int32'", "'int64'", "'uint8'", "'uint16'",
    "'uint32'", "'uint64'", "'float32'", "'float64'", "'float96'", "'String'",
    "'boolean'", "'<-'", "';'", "'{'", "'}'", "'('", "')'", "','", "'return'",
    "'+'", "'-'", "'*'", "'/'", "'.'",
];
cNextLexer._SYMBOLIC_NAMES = [
    undefined, undefined, "IMPORT", "INCLUDE", "PUBLIC", "STATIC", "CLASS",
    "TYPE_INT8", "TYPE_INT16", "TYPE_INT32", "TYPE_INT64", "TYPE_UINT8", "TYPE_UINT16",
    "TYPE_UINT32", "TYPE_UINT64", "TYPE_FLOAT32", "TYPE_FLOAT64", "TYPE_FLOAT96",
    "TYPE_STRING", "TYPE_BOOLEAN", "ASSIGN", "SEMI", "LBRACE", "RBRACE", "LPAREN",
    "RPAREN", "COMMA", "RETURN", "PLUS", "MINUS", "MULT", "DIV", "DOT", "ID",
    "NUMBER", "STRING", "FILENAME", "WS",
];
cNextLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(cNextLexer._LITERAL_NAMES, cNextLexer._SYMBOLIC_NAMES, []);
cNextLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\'\u011C\b\x01" +
    "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
    "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
    "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
    "\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
    "\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
    "\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
    "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
    "\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03" +
    "\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03" +
    "\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
    "\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
    "\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t" +
    "\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03" +
    "\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
    "\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F" +
    "\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10" +
    "\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11" +
    "\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12" +
    "\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
    "\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
    "\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18" +
    "\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C" +
    "\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F" +
    "\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x07\"\xF2\n\"\f\"\x0E\"\xF5\v" +
    "\"\x03#\x06#\xF8\n#\r#\x0E#\xF9\x03#\x03#\x06#\xFE\n#\r#\x0E#\xFF\x05" +
    "#\u0102\n#\x03$\x03$\x07$\u0106\n$\f$\x0E$\u0109\v$\x03$\x03$\x03%\x03" +
    "%\x07%\u010F\n%\f%\x0E%\u0112\v%\x03%\x03%\x03&\x06&\u0117\n&\r&\x0E&" +
    "\u0118\x03&\x03&\x04\u0107\u0110\x02\x02\'\x03\x02\x03\x05\x02\x04\x07" +
    "\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15" +
    "\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02" +
    "\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191" +
    "\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02" +
    "\"C\x02#E\x02$G\x02%I\x02&K\x02\'\x03\x02\x06\x05\x02C\\aac|\x06\x022" +
    ";C\\aac|\x03\x022;\x05\x02\v\f\x0F\x0F\"\"\x02\u0122\x02\x03\x03\x02\x02" +
    "\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
    "\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
    "\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
    "\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
    "\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
    "\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)" +
    "\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
    "\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
    "\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
    "\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
    "\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02" +
    "K\x03\x02\x02\x02\x03M\x03\x02\x02\x02\x05R\x03\x02\x02\x02\x07Y\x03\x02" +
    "\x02\x02\tb\x03\x02\x02\x02\vi\x03\x02\x02\x02\rp\x03\x02\x02\x02\x0F" +
    "v\x03\x02\x02\x02\x11{\x03\x02\x02\x02\x13\x81\x03\x02\x02\x02\x15\x87" +
    "\x03\x02\x02\x02\x17\x8D\x03\x02\x02\x02\x19\x93\x03\x02\x02\x02\x1B\x9A" +
    "\x03\x02\x02\x02\x1D\xA1\x03\x02\x02\x02\x1F\xA8\x03\x02\x02\x02!\xB0" +
    "\x03\x02\x02\x02#\xB8\x03\x02\x02\x02%\xC0\x03\x02\x02\x02\'\xC7\x03\x02" +
    "\x02\x02)\xCF\x03\x02\x02\x02+\xD2\x03\x02\x02\x02-\xD4\x03\x02\x02\x02" +
    "/\xD6\x03\x02\x02\x021\xD8\x03\x02\x02\x023\xDA\x03\x02\x02\x025\xDC\x03" +
    "\x02\x02\x027\xDE\x03\x02\x02\x029\xE5\x03\x02\x02\x02;\xE7\x03\x02\x02" +
    "\x02=\xE9\x03\x02\x02\x02?\xEB\x03\x02\x02\x02A\xED\x03\x02\x02\x02C\xEF" +
    "\x03\x02\x02\x02E\xF7\x03\x02\x02\x02G\u0103\x03\x02\x02\x02I\u010C\x03" +
    "\x02\x02\x02K\u0116\x03\x02\x02\x02MN\x07x\x02\x02NO\x07q\x02\x02OP\x07" +
    "k\x02\x02PQ\x07f\x02\x02Q\x04\x03\x02\x02\x02RS\x07k\x02\x02ST\x07o\x02" +
    "\x02TU\x07r\x02\x02UV\x07q\x02\x02VW\x07t\x02\x02WX\x07v\x02\x02X\x06" +
    "\x03\x02\x02\x02YZ\x07%\x02\x02Z[\x07k\x02\x02[\\\x07p\x02\x02\\]\x07" +
    "e\x02\x02]^\x07n\x02\x02^_\x07w\x02\x02_`\x07f\x02\x02`a\x07g\x02\x02" +
    "a\b\x03\x02\x02\x02bc\x07r\x02\x02cd\x07w\x02\x02de\x07d\x02\x02ef\x07" +
    "n\x02\x02fg\x07k\x02\x02gh\x07e\x02\x02h\n\x03\x02\x02\x02ij\x07u\x02" +
    "\x02jk\x07v\x02\x02kl\x07c\x02\x02lm\x07v\x02\x02mn\x07k\x02\x02no\x07" +
    "e\x02\x02o\f\x03\x02\x02\x02pq\x07e\x02\x02qr\x07n\x02\x02rs\x07c\x02" +
    "\x02st\x07u\x02\x02tu\x07u\x02\x02u\x0E\x03\x02\x02\x02vw\x07k\x02\x02" +
    "wx\x07p\x02\x02xy\x07v\x02\x02yz\x07:\x02\x02z\x10\x03\x02\x02\x02{|\x07" +
    "k\x02\x02|}\x07p\x02\x02}~\x07v\x02\x02~\x7F\x073\x02\x02\x7F\x80\x07" +
    "8\x02\x02\x80\x12\x03\x02\x02\x02\x81\x82\x07k\x02\x02\x82\x83\x07p\x02" +
    "\x02\x83\x84\x07v\x02\x02\x84\x85\x075\x02\x02\x85\x86\x074\x02\x02\x86" +
    "\x14\x03\x02\x02\x02\x87\x88\x07k\x02\x02\x88\x89\x07p\x02\x02\x89\x8A" +
    "\x07v\x02\x02\x8A\x8B\x078\x02\x02\x8B\x8C\x076\x02\x02\x8C\x16\x03\x02" +
    "\x02\x02\x8D\x8E\x07w\x02\x02\x8E\x8F\x07k\x02\x02\x8F\x90\x07p\x02\x02" +
    "\x90\x91\x07v\x02\x02\x91\x92\x07:\x02\x02\x92\x18\x03\x02\x02\x02\x93" +
    "\x94\x07w\x02\x02\x94\x95\x07k\x02\x02\x95\x96\x07p\x02\x02\x96\x97\x07" +
    "v\x02\x02\x97\x98\x073\x02\x02\x98\x99\x078\x02\x02\x99\x1A\x03\x02\x02" +
    "\x02\x9A\x9B\x07w\x02\x02\x9B\x9C\x07k\x02\x02\x9C\x9D\x07p\x02\x02\x9D" +
    "\x9E\x07v\x02\x02\x9E\x9F\x075\x02\x02\x9F\xA0\x074\x02\x02\xA0\x1C\x03" +
    "\x02\x02\x02\xA1\xA2\x07w\x02\x02\xA2\xA3\x07k\x02\x02\xA3\xA4\x07p\x02" +
    "\x02\xA4\xA5\x07v\x02\x02\xA5\xA6\x078\x02\x02\xA6\xA7\x076\x02\x02\xA7" +
    "\x1E\x03\x02\x02\x02\xA8\xA9\x07h\x02\x02\xA9\xAA\x07n\x02\x02\xAA\xAB" +
    "\x07q\x02\x02\xAB\xAC\x07c\x02\x02\xAC\xAD\x07v\x02\x02\xAD\xAE\x075\x02" +
    "\x02\xAE\xAF\x074\x02\x02\xAF \x03\x02\x02\x02\xB0\xB1\x07h\x02\x02\xB1" +
    "\xB2\x07n\x02\x02\xB2\xB3\x07q\x02\x02\xB3\xB4\x07c\x02\x02\xB4\xB5\x07" +
    "v\x02\x02\xB5\xB6\x078\x02\x02\xB6\xB7\x076\x02\x02\xB7\"\x03\x02\x02" +
    "\x02\xB8\xB9\x07h\x02\x02\xB9\xBA\x07n\x02\x02\xBA\xBB\x07q\x02\x02\xBB" +
    "\xBC\x07c\x02\x02\xBC\xBD\x07v\x02\x02\xBD\xBE\x07;\x02\x02\xBE\xBF\x07" +
    "8\x02\x02\xBF$\x03\x02\x02\x02\xC0\xC1\x07U\x02\x02\xC1\xC2\x07v\x02\x02" +
    "\xC2\xC3\x07t\x02\x02\xC3\xC4\x07k\x02\x02\xC4\xC5\x07p\x02\x02\xC5\xC6" +
    "\x07i\x02\x02\xC6&\x03\x02\x02\x02\xC7\xC8\x07d\x02\x02\xC8\xC9\x07q\x02" +
    "\x02\xC9\xCA\x07q\x02\x02\xCA\xCB\x07n\x02\x02\xCB\xCC\x07g\x02\x02\xCC" +
    "\xCD\x07c\x02\x02\xCD\xCE\x07p\x02\x02\xCE(\x03\x02\x02\x02\xCF\xD0\x07" +
    ">\x02\x02\xD0\xD1\x07/\x02\x02\xD1*\x03\x02\x02\x02\xD2\xD3\x07=\x02\x02" +
    "\xD3,\x03\x02\x02\x02\xD4\xD5\x07}\x02\x02\xD5.\x03\x02\x02\x02\xD6\xD7" +
    "\x07\x7F\x02\x02\xD70\x03\x02\x02\x02\xD8\xD9\x07*\x02\x02\xD92\x03\x02" +
    "\x02\x02\xDA\xDB\x07+\x02\x02\xDB4\x03\x02\x02\x02\xDC\xDD\x07.\x02\x02" +
    "\xDD6\x03\x02\x02\x02\xDE\xDF\x07t\x02\x02\xDF\xE0\x07g\x02\x02\xE0\xE1" +
    "\x07v\x02\x02\xE1\xE2\x07w\x02\x02\xE2\xE3\x07t\x02\x02\xE3\xE4\x07p\x02" +
    "\x02\xE48\x03\x02\x02\x02\xE5\xE6\x07-\x02\x02\xE6:\x03\x02\x02\x02\xE7" +
    "\xE8\x07/\x02\x02\xE8<\x03\x02\x02\x02\xE9\xEA\x07,\x02\x02\xEA>\x03\x02" +
    "\x02\x02\xEB\xEC\x071\x02\x02\xEC@\x03\x02\x02\x02\xED\xEE\x070\x02\x02" +
    "\xEEB\x03\x02\x02\x02\xEF\xF3\t\x02\x02\x02\xF0\xF2\t\x03\x02\x02\xF1" +
    "\xF0\x03\x02\x02\x02\xF2\xF5\x03\x02\x02\x02\xF3\xF1\x03\x02\x02\x02\xF3" +
    "\xF4\x03\x02\x02\x02\xF4D\x03\x02\x02\x02\xF5\xF3\x03\x02\x02\x02\xF6" +
    "\xF8\t\x04\x02\x02\xF7\xF6\x03\x02\x02\x02\xF8\xF9\x03\x02\x02\x02\xF9" +
    "\xF7\x03\x02\x02\x02\xF9\xFA\x03\x02\x02\x02\xFA\u0101\x03\x02\x02\x02" +
    "\xFB\xFD\x070\x02\x02\xFC\xFE\t\x04\x02\x02\xFD\xFC\x03\x02\x02\x02\xFE" +
    "\xFF\x03\x02\x02\x02\xFF\xFD\x03\x02\x02\x02\xFF\u0100\x03\x02\x02\x02" +
    "\u0100\u0102\x03\x02\x02\x02\u0101\xFB\x03\x02\x02\x02\u0101\u0102\x03" +
    "\x02\x02\x02\u0102F\x03\x02\x02\x02\u0103\u0107\x07b\x02\x02\u0104\u0106" +
    "\v\x02\x02\x02\u0105\u0104\x03\x02\x02\x02\u0106\u0109\x03\x02\x02\x02" +
    "\u0107\u0108\x03\x02\x02\x02\u0107\u0105\x03\x02\x02\x02\u0108\u010A\x03" +
    "\x02\x02\x02\u0109\u0107\x03\x02\x02\x02\u010A\u010B\x07b\x02\x02\u010B" +
    "H\x03\x02\x02\x02\u010C\u0110\x07$\x02\x02\u010D\u010F\v\x02\x02\x02\u010E" +
    "\u010D\x03\x02\x02\x02\u010F\u0112\x03\x02\x02\x02\u0110\u0111\x03\x02" +
    "\x02\x02\u0110\u010E\x03\x02\x02\x02\u0111\u0113\x03\x02\x02\x02\u0112" +
    "\u0110\x03\x02\x02\x02\u0113\u0114\x07$\x02\x02\u0114J\x03\x02\x02\x02" +
    "\u0115\u0117\t\x05\x02\x02\u0116\u0115\x03\x02\x02\x02\u0117\u0118\x03" +
    "\x02\x02\x02\u0118\u0116\x03\x02\x02\x02\u0118\u0119\x03\x02\x02\x02\u0119" +
    "\u011A\x03\x02\x02\x02\u011A\u011B\b&\x02\x02\u011BL\x03\x02\x02\x02\n" +
    "\x02\xF3\xF9\xFF\u0101\u0107\u0110\u0118\x03\b\x02\x02";
